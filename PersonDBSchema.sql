--
-- Target: Microsoft SQL Server 
-- Syntax: isql /Uuser /Ppassword /Sserver -i\path\filename.sql
-- Date  : Oct 09 2018 10:09
-- Script Generated by Database Design Studio 2.21.3 
--


--
-- Select Database: 'db_name'
--
USE db_name
GO
 
IF DB_NAME() = 'db_name'
    RAISERROR('''db_name'' DATABASE CONTEXT NOW IN USE.',1,1)
ELSE
    RAISERROR('ERROR IN BATCH FILE, ''USE db_name'' FAILED!  KILLING THE SPID NOW.',22,127) WITH LOG
 
GO
EXECUTE SP_DBOPTION 'db_name' ,'TRUNC. LOG ON CHKPT.' ,'TRUE'
GO


--
-- Create Table    : 'Country'   
-- CountryID       :  
-- Country         :  
-- CountryCode     :  
--
CREATE TABLE Country (
    CountryID      BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Country        VARCHAR(255) NOT NULL UNIQUE,
    CountryCode    VARCHAR(255) NOT NULL UNIQUE,
CONSTRAINT pk_Country PRIMARY KEY CLUSTERED (CountryID,CountryCode))
GO

--
-- Create Table    : 'PhoneCompany'   
-- PhnCompanyID    :  
-- Company         :  
--
CREATE TABLE PhoneCompany (
    PhnCompanyID   BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Company        NVARCHAR(255) NOT NULL UNIQUE,
CONSTRAINT pk_PhoneCompany PRIMARY KEY CLUSTERED (PhnCompanyID))
GO

--
-- Create Table    : 'City'   
-- CityID          :  
-- City            :  
-- ZipCode         :  
-- CountryID       :  (references Country.CountryID)
-- CountryCode     :  (references Country.CountryCode)
--
CREATE TABLE City (
    CityID         BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    City           VARCHAR(255) NOT NULL UNIQUE,
    ZipCode        VARCHAR(255) NOT NULL,
    CountryID      BIGINT NOT NULL,
    CountryCode    VARCHAR(255) NOT NULL,
CONSTRAINT pk_City PRIMARY KEY CLUSTERED (CityID),
CONSTRAINT fk_City FOREIGN KEY (CountryID,CountryCode)
    REFERENCES Country (CountryID,CountryCode)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Address'   
-- AddressID       :  
-- Street          :  
-- HouseNumber     :  
-- CityID          :  (references City.CityID)
--
CREATE TABLE Address (
    AddressID      BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Street         VARCHAR(255) NOT NULL,
    HouseNumber    VARCHAR(255) NOT NULL,
    CityID         BIGINT NOT NULL,
CONSTRAINT pk_Address PRIMARY KEY CLUSTERED (AddressID),
CONSTRAINT fk_Address FOREIGN KEY (CityID)
    REFERENCES City (CityID)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Person'   
-- PersonID        :  
-- AddressID       :  (references Address.AddressID)
-- Firstname       :  
-- Middlename      :  
-- Surname         :  
--
CREATE TABLE Person (
    PersonID       BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    AddressID      BIGINT NOT NULL,
    Firstname      VARCHAR(255) NOT NULL,
    Middlename     VARCHAR(255) NULL,
    Surname        VARCHAR(255) NOT NULL,
CONSTRAINT pk_Person PRIMARY KEY CLUSTERED (PersonID),
CONSTRAINT fk_Person FOREIGN KEY (AddressID)
    REFERENCES Address (AddressID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Alternative_Address'   
-- PersonID        :  (references Person.PersonID)
-- AddressID       :  (references Address.AddressID)
-- type            :  
--
CREATE TABLE Alternative_Address (
    PersonID       BIGINT NOT NULL,
    AddressID      BIGINT NOT NULL,
    type           VARCHAR(20) NOT NULL,
CONSTRAINT pk_Alternative_Address PRIMARY KEY CLUSTERED (PersonID,AddressID),
CONSTRAINT fk_Alternative_Address FOREIGN KEY (PersonID)
    REFERENCES Person (PersonID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
CONSTRAINT fk_Alternative_Address2 FOREIGN KEY (AddressID)
    REFERENCES Address (AddressID)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'EmailAddress'   
-- EmailID         :  
-- EmailAdress     :  
-- PersonID        :  (references Person.PersonID)
--
CREATE TABLE EmailAddress (
    EmailID        BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    EmailAdress    VARCHAR(255) NOT NULL UNIQUE,
    PersonID       BIGINT NOT NULL,
CONSTRAINT pk_EmailAddress PRIMARY KEY CLUSTERED (EmailID),
CONSTRAINT fk_EmailAddress FOREIGN KEY (PersonID)
    REFERENCES Person (PersonID)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Note'   
-- NoteID          :  
-- Note            :  
-- PersonID        :  (references Person.PersonID)
--
CREATE TABLE Note (
    NoteID         BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Note           VARCHAR NOT NULL,
    PersonID       BIGINT NOT NULL,
CONSTRAINT pk_Note PRIMARY KEY CLUSTERED (NoteID),
CONSTRAINT fk_Note FOREIGN KEY (PersonID)
    REFERENCES Person (PersonID)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'PhoneNumber'   
-- PhnNumberID     :  
-- PhoneNumber     :  
-- type            :  
-- PersonID        :  (references Person.PersonID)
-- PhnCompanyID    :  (references PhoneCompany.PhnCompanyID)
--
CREATE TABLE PhoneNumber (
    PhnNumberID    BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    PhoneNumber    NVARCHAR(255) NOT NULL UNIQUE,
    type           NVARCHAR(255) NOT NULL,
    PersonID       BIGINT NULL,
    PhnCompanyID   BIGINT NOT NULL,
CONSTRAINT pk_PhoneNumber PRIMARY KEY CLUSTERED (PhnNumberID),
CONSTRAINT fk_PhoneNumber FOREIGN KEY (PersonID)
    REFERENCES Person (PersonID)
    ON UPDATE CASCADE,
CONSTRAINT fk_PhoneNumber2 FOREIGN KEY (PhnCompanyID)
    REFERENCES PhoneCompany (PhnCompanyID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Permissions for: 'public'
--
GRANT ALL ON Country TO public
GO
GRANT ALL ON PhoneCompany TO public
GO
GRANT ALL ON City TO public
GO
GRANT ALL ON Address TO public
GO
GRANT ALL ON Person TO public
GO
GRANT ALL ON Alternative_Address TO public
GO
GRANT ALL ON EmailAddress TO public
GO
GRANT ALL ON Note TO public
GO
GRANT ALL ON PhoneNumber TO public
GO

