/*
Deployment script for PersonkartotekDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PersonkartotekDB"
:setvar DefaultFilePrefix "PersonkartotekDB"
:setvar DefaultDataPath "C:\Users\Mikkel\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\Mikkel\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Address]...';


GO
CREATE TABLE [dbo].[Address] (
    [AddressID]   BIGINT        IDENTITY (1, 1) NOT NULL,
    [Street]      VARCHAR (255) NOT NULL,
    [HouseNumber] VARCHAR (255) NOT NULL,
    [CityID]      BIGINT        NOT NULL,
    CONSTRAINT [pk_Address] PRIMARY KEY CLUSTERED ([AddressID] ASC),
    UNIQUE NONCLUSTERED ([AddressID] ASC)
);


GO
PRINT N'Creating [dbo].[Alternative_Address]...';


GO
CREATE TABLE [dbo].[Alternative_Address] (
    [PersonID]  BIGINT       NOT NULL,
    [AddressID] BIGINT       NOT NULL,
    [type]      VARCHAR (20) NOT NULL,
    CONSTRAINT [pk_Alternative_Address] PRIMARY KEY CLUSTERED ([PersonID] ASC, [AddressID] ASC)
);


GO
PRINT N'Creating [dbo].[City]...';


GO
CREATE TABLE [dbo].[City] (
    [CityID]      BIGINT        IDENTITY (1, 1) NOT NULL,
    [City]        VARCHAR (255) NOT NULL,
    [ZipCode]     VARCHAR (255) NOT NULL,
    [CountryID]   BIGINT        NOT NULL,
    [CountryCode] VARCHAR (255) NOT NULL,
    CONSTRAINT [pk_City] PRIMARY KEY CLUSTERED ([CityID] ASC),
    UNIQUE NONCLUSTERED ([City] ASC),
    UNIQUE NONCLUSTERED ([CityID] ASC)
);


GO
PRINT N'Creating [dbo].[Country]...';


GO
CREATE TABLE [dbo].[Country] (
    [CountryID]   BIGINT        IDENTITY (1, 1) NOT NULL,
    [Country]     VARCHAR (255) NOT NULL,
    [CountryCode] VARCHAR (255) NOT NULL,
    CONSTRAINT [pk_Country] PRIMARY KEY CLUSTERED ([CountryID] ASC, [CountryCode] ASC),
    UNIQUE NONCLUSTERED ([Country] ASC),
    UNIQUE NONCLUSTERED ([CountryCode] ASC),
    UNIQUE NONCLUSTERED ([CountryID] ASC)
);


GO
PRINT N'Creating [dbo].[EmailAddress]...';


GO
CREATE TABLE [dbo].[EmailAddress] (
    [EmailID]     BIGINT        IDENTITY (1, 1) NOT NULL,
    [EmailAdress] VARCHAR (255) NOT NULL,
    [PersonID]    BIGINT        NOT NULL,
    CONSTRAINT [pk_EmailAddress] PRIMARY KEY CLUSTERED ([EmailID] ASC),
    UNIQUE NONCLUSTERED ([EmailAdress] ASC),
    UNIQUE NONCLUSTERED ([EmailID] ASC)
);


GO
PRINT N'Creating [dbo].[Note]...';


GO
CREATE TABLE [dbo].[Note] (
    [NoteID]   BIGINT      IDENTITY (1, 1) NOT NULL,
    [Note]     VARCHAR (1) NOT NULL,
    [PersonID] BIGINT      NOT NULL,
    CONSTRAINT [pk_Note] PRIMARY KEY CLUSTERED ([NoteID] ASC),
    UNIQUE NONCLUSTERED ([NoteID] ASC)
);


GO
PRINT N'Creating [dbo].[Person]...';


GO
CREATE TABLE [dbo].[Person] (
    [PersonID]   BIGINT        IDENTITY (1, 1) NOT NULL,
    [AddressID]  BIGINT        NOT NULL,
    [Firstname]  VARCHAR (255) NOT NULL,
    [Middlename] VARCHAR (255) NULL,
    [Surname]    VARCHAR (255) NOT NULL,
    CONSTRAINT [pk_Person] PRIMARY KEY CLUSTERED ([PersonID] ASC),
    UNIQUE NONCLUSTERED ([PersonID] ASC)
);


GO
PRINT N'Creating [dbo].[PhoneCompany]...';


GO
CREATE TABLE [dbo].[PhoneCompany] (
    [PhnCompanyID] BIGINT         IDENTITY (1, 1) NOT NULL,
    [Company]      NVARCHAR (255) NOT NULL,
    CONSTRAINT [pk_PhoneCompany] PRIMARY KEY CLUSTERED ([PhnCompanyID] ASC),
    UNIQUE NONCLUSTERED ([Company] ASC),
    UNIQUE NONCLUSTERED ([PhnCompanyID] ASC)
);


GO
PRINT N'Creating [dbo].[PhoneNumber]...';


GO
CREATE TABLE [dbo].[PhoneNumber] (
    [PhnNumberID]  BIGINT         IDENTITY (1, 1) NOT NULL,
    [PhoneNumber]  NVARCHAR (255) NOT NULL,
    [type]         NVARCHAR (255) NOT NULL,
    [PersonID]     BIGINT         NULL,
    [PhnCompanyID] BIGINT         NOT NULL,
    CONSTRAINT [pk_PhoneNumber] PRIMARY KEY CLUSTERED ([PhnNumberID] ASC),
    UNIQUE NONCLUSTERED ([PhnNumberID] ASC),
    UNIQUE NONCLUSTERED ([PhoneNumber] ASC)
);


GO
PRINT N'Creating [dbo].[fk_Address]...';


GO
ALTER TABLE [dbo].[Address]
    ADD CONSTRAINT [fk_Address] FOREIGN KEY ([CityID]) REFERENCES [dbo].[City] ([CityID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[fk_Alternative_Address]...';


GO
ALTER TABLE [dbo].[Alternative_Address]
    ADD CONSTRAINT [fk_Alternative_Address] FOREIGN KEY ([PersonID]) REFERENCES [dbo].[Person] ([PersonID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[fk_Alternative_Address2]...';


GO
ALTER TABLE [dbo].[Alternative_Address]
    ADD CONSTRAINT [fk_Alternative_Address2] FOREIGN KEY ([AddressID]) REFERENCES [dbo].[Address] ([AddressID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[fk_City]...';


GO
ALTER TABLE [dbo].[City]
    ADD CONSTRAINT [fk_City] FOREIGN KEY ([CountryID], [CountryCode]) REFERENCES [dbo].[Country] ([CountryID], [CountryCode]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[fk_EmailAddress]...';


GO
ALTER TABLE [dbo].[EmailAddress]
    ADD CONSTRAINT [fk_EmailAddress] FOREIGN KEY ([PersonID]) REFERENCES [dbo].[Person] ([PersonID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[fk_Note]...';


GO
ALTER TABLE [dbo].[Note]
    ADD CONSTRAINT [fk_Note] FOREIGN KEY ([PersonID]) REFERENCES [dbo].[Person] ([PersonID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[fk_Person]...';


GO
ALTER TABLE [dbo].[Person]
    ADD CONSTRAINT [fk_Person] FOREIGN KEY ([AddressID]) REFERENCES [dbo].[Address] ([AddressID]);


GO
PRINT N'Creating [dbo].[fk_PhoneNumber]...';


GO
ALTER TABLE [dbo].[PhoneNumber]
    ADD CONSTRAINT [fk_PhoneNumber] FOREIGN KEY ([PersonID]) REFERENCES [dbo].[Person] ([PersonID]) ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[fk_PhoneNumber2]...';


GO
ALTER TABLE [dbo].[PhoneNumber]
    ADD CONSTRAINT [fk_PhoneNumber2] FOREIGN KEY ([PhnCompanyID]) REFERENCES [dbo].[PhoneCompany] ([PhnCompanyID]) ON UPDATE CASCADE;


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
